# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- dev

pool:
  name: 'Default'

# pool:
#  vmImage: ubuntu-latest

# variables:
#   - name: SONAR_TOKEN
#     value: "c03384d7661ee7aa89d51a2626d0a7f5783823e5"

steps:
# - task: Maven@3
#   displayName: 'SonarQube Code Scan'
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     publishJUnitResults: true
#     testResultsFiles: '**/surefire-reports/TEST-*.xml'
#     goals: 'verify sonar:sonar'

# - task: Maven@3
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     publishJUnitResults: true
#     goals: 'install'

# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: '$(Pipeline.Workspace)'
#     artifact: 'artifact-cb'
#     publishLocation: 'pipeline'

# - task: DownloadPipelineArtifact@2
#   inputs:
#     buildType: 'current'
#     artifactName: 'artifact-cb'
#     targetPath: '$(Pipeline.Workspace)'

# - task: Maven@3
#   displayName: 'Generate Artifact And Publish Unto Artifact Manager'
#   inputs:
#     mavenPomFile: 'pom.xml'
#     mavenOptions: '-Xmx3072m'
#     goals: 'deploy'

- task: TerraformInstaller@0
  displayName: 'install'
  inputs:
    terraformVersion: '1.2.1'

- task: TerraformTaskV3@3
  displayName: 'init' 
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'terraform-rg-spn'
    backendAzureRmResourceGroupName: 'NetworkWatcherRG'
    backendAzureRmStorageAccountName: 'cloudbinary'
    backendAzureRmContainerName: 'cloudbinarycontainer'
    backendAzureRmKey: 'terraform.tfstate'

# - task: TerraformTaskV3@3
#   displayName: Format
#   inputs:
#     provider: 'azurerm'
#     command: 'fmt'

- task: TerraformTaskV3@3
  displayName: validate
  inputs:
    provider: 'azurerm'
    command: 'validate'

- task: TerraformTaskV3@3
  displayName: 'plan'
  inputs:
    provider: 'azurerm'
    command: 'plan'
    environmentServiceNameAzureRM: 'terraform-rg-spn'

- task: TerraformTaskV3@3
  displayName: 'apply'
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'terraform-rg-spn'